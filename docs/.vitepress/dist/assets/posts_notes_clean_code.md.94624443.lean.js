import{_ as s,c as n,o as a,b as l}from"./app.009acc7b.js";const C=JSON.parse('{"title":"Javascript风格指南","description":"","frontmatter":{"layout":"doc","title":"Javascript风格指南","date":"2023-02-25 17:23:27"},"headers":[{"level":2,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"使用有意义，可读性好的变量名","slug":"使用有意义-可读性好的变量名","link":"#使用有意义-可读性好的变量名","children":[]},{"level":3,"title":"使用 ES6 的 const 定义常量","slug":"使用-es6-的-const-定义常量","link":"#使用-es6-的-const-定义常量","children":[]},{"level":3,"title":"对功能类似的变量名采用统一的命名风格","slug":"对功能类似的变量名采用统一的命名风格","link":"#对功能类似的变量名采用统一的命名风格","children":[]},{"level":3,"title":"使用易于检索名称","slug":"使用易于检索名称","link":"#使用易于检索名称","children":[]},{"level":3,"title":"使用说明变量(即有意义的变量名)","slug":"使用说明变量-即有意义的变量名","link":"#使用说明变量-即有意义的变量名","children":[]},{"level":3,"title":"不要绕太多的弯子","slug":"不要绕太多的弯子","link":"#不要绕太多的弯子","children":[]},{"level":3,"title":"避免重复的描述","slug":"避免重复的描述","link":"#避免重复的描述","children":[]},{"level":3,"title":"避免无意义的条件判断","slug":"避免无意义的条件判断","link":"#避免无意义的条件判断","children":[]}]},{"level":2,"title":"函数","slug":"函数","link":"#函数","children":[{"level":3,"title":"函数参数 (理想情况下应不超过 2 个)","slug":"函数参数-理想情况下应不超过-2-个","link":"#函数参数-理想情况下应不超过-2-个","children":[]},{"level":3,"title":"函数功能的单一性","slug":"函数功能的单一性","link":"#函数功能的单一性","children":[]},{"level":3,"title":"函数名应明确表明其功能","slug":"函数名应明确表明其功能","link":"#函数名应明确表明其功能","children":[]},{"level":3,"title":"函数应该只做一层抽象","slug":"函数应该只做一层抽象","link":"#函数应该只做一层抽象","children":[]},{"level":3,"title":"移除重复的代码","slug":"移除重复的代码","link":"#移除重复的代码","children":[]},{"level":3,"title":"采用默认参数精简代码","slug":"采用默认参数精简代码","link":"#采用默认参数精简代码","children":[]},{"level":3,"title":"使用 Object.assign 设置默认对象","slug":"使用-object-assign-设置默认对象","link":"#使用-object-assign-设置默认对象","children":[]},{"level":3,"title":"不要使用标记(Flag)作为函数参数","slug":"不要使用标记-flag-作为函数参数","link":"#不要使用标记-flag-作为函数参数","children":[]},{"level":3,"title":"避免副作用","slug":"避免副作用","link":"#避免副作用","children":[]},{"level":3,"title":"不要写全局函数","slug":"不要写全局函数","link":"#不要写全局函数","children":[]},{"level":3,"title":"采用函数式编程","slug":"采用函数式编程","link":"#采用函数式编程","children":[]},{"level":3,"title":"封装判断条件","slug":"封装判断条件","link":"#封装判断条件","children":[]},{"level":3,"title":"避免“否定情况”的判断","slug":"避免-否定情况-的判断","link":"#避免-否定情况-的判断","children":[]},{"level":3,"title":"避免条件判断","slug":"避免条件判断","link":"#避免条件判断","children":[]},{"level":3,"title":"避免类型判断(part 1)","slug":"避免类型判断-part-1","link":"#避免类型判断-part-1","children":[]},{"level":3,"title":"避免类型判断(part 2)","slug":"避免类型判断-part-2","link":"#避免类型判断-part-2","children":[]},{"level":3,"title":"避免过度优化","slug":"避免过度优化","link":"#避免过度优化","children":[]},{"level":3,"title":"删除无效的代码","slug":"删除无效的代码","link":"#删除无效的代码","children":[]}]},{"level":2,"title":"对象和数据结构","slug":"对象和数据结构","link":"#对象和数据结构","children":[{"level":3,"title":"使用 getters 和 setters","slug":"使用-getters-和-setters","link":"#使用-getters-和-setters","children":[]},{"level":3,"title":"让对象拥有私有成员","slug":"让对象拥有私有成员","link":"#让对象拥有私有成员","children":[]}]},{"level":2,"title":"类","slug":"类","link":"#类","children":[{"level":3,"title":"单一职责原则 (SRP)","slug":"单一职责原则-srp","link":"#单一职责原则-srp","children":[]},{"level":3,"title":"开/闭原则 (OCP)","slug":"开-闭原则-ocp","link":"#开-闭原则-ocp","children":[]},{"level":3,"title":"利斯科夫替代原则 (LSP)","slug":"利斯科夫替代原则-lsp","link":"#利斯科夫替代原则-lsp","children":[]},{"level":3,"title":"接口隔离原则 (ISP)","slug":"接口隔离原则-isp","link":"#接口隔离原则-isp","children":[]},{"level":3,"title":"依赖反转原则 (DIP)","slug":"依赖反转原则-dip","link":"#依赖反转原则-dip","children":[]},{"level":3,"title":"使用 ES6 的 classes 而不是 ES5 的 Function","slug":"使用-es6-的-classes-而不是-es5-的-function","link":"#使用-es6-的-classes-而不是-es5-的-function","children":[]},{"level":3,"title":"使用方法链","slug":"使用方法链","link":"#使用方法链","children":[]},{"level":3,"title":"优先使用组合模式而非继承","slug":"优先使用组合模式而非继承","link":"#优先使用组合模式而非继承","children":[]}]},{"level":2,"title":"测试","slug":"测试","link":"#测试","children":[{"level":3,"title":"单一的测试每个概念","slug":"单一的测试每个概念","link":"#单一的测试每个概念","children":[]}]},{"level":2,"title":"并发","slug":"并发","link":"#并发","children":[{"level":3,"title":"用 Promises 替代回调","slug":"用-promises-替代回调","link":"#用-promises-替代回调","children":[]},{"level":3,"title":"Async/Await 是较 Promises 更好的选择","slug":"async-await-是较-promises-更好的选择","link":"#async-await-是较-promises-更好的选择","children":[]}]},{"level":2,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[{"level":3,"title":"别忘了捕获错误","slug":"别忘了捕获错误","link":"#别忘了捕获错误","children":[]},{"level":3,"title":"不要忽略被拒绝的 promises","slug":"不要忽略被拒绝的-promises","link":"#不要忽略被拒绝的-promises","children":[]}]},{"level":2,"title":"格式化","slug":"格式化","link":"#格式化","children":[{"level":3,"title":"大小写一致","slug":"大小写一致","link":"#大小写一致","children":[]},{"level":3,"title":"调用函数的函数和被调函数应放在较近的位置","slug":"调用函数的函数和被调函数应放在较近的位置","link":"#调用函数的函数和被调函数应放在较近的位置","children":[]}]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[{"level":3,"title":"只对存在一定业务逻辑复杂性的代码进行注释","slug":"只对存在一定业务逻辑复杂性的代码进行注释","link":"#只对存在一定业务逻辑复杂性的代码进行注释","children":[]},{"level":3,"title":"不要在代码库中遗留被注释掉的代码","slug":"不要在代码库中遗留被注释掉的代码","link":"#不要在代码库中遗留被注释掉的代码","children":[]},{"level":3,"title":"不需要版本更新类型注释","slug":"不需要版本更新类型注释","link":"#不需要版本更新类型注释","children":[]},{"level":3,"title":"避免位置标记","slug":"避免位置标记","link":"#避免位置标记","children":[]},{"level":3,"title":"避免在源文件中写入法律评论","slug":"避免在源文件中写入法律评论","link":"#避免在源文件中写入法律评论","children":[]}]}],"relativePath":"posts/notes/clean_code.md","lastUpdated":1678779955000}'),p={name:"posts/notes/clean_code.md"},o=l("",381),e=[o];function t(c,r,F,y,D,i){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{C as __pageData,d as default};
