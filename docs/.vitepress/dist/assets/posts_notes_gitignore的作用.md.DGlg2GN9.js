import{_ as i,c as t,o as e,a2 as l}from"./chunks/framework.RRm-Q96U.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"posts/notes/gitignore的作用.md","filePath":"posts/notes/gitignore的作用.md","lastUpdated":1687876967000}'),o={name:"posts/notes/gitignore的作用.md"},a=l('<h2 id="gitignore过滤规则-by-chatgpt" tabindex="-1">.gitignore过滤规则 by chatGPT <a class="header-anchor" href="#gitignore过滤规则-by-chatgpt" aria-label="Permalink to &quot;.gitignore过滤规则 by chatGPT&quot;">​</a></h2><p>忽略规则是 <code>.gitignore</code> 文件中的模式或规则，用于告诉 Git 哪些文件或目录应该被忽略，不纳入版本控制。<code>.gitignore</code> 文件使用简单的模式匹配规则来指定要忽略的文件或目录。 以下是一些常用的 <code>.gitignore</code> 规则示例：</p><ol><li>忽略特定文件： <ul><li>file.txt # 忽略根目录下的 file.txt 文件</li><li>path/to/file.txt # 忽略指定路径下的 file.txt 文件</li><li>*.log # 忽略所有扩展名为 .log 的文件</li></ul></li><li>忽略特定目录： <ul><li>dir/ # 忽略根目录下的 dir 目录及其内容</li><li>path/to/dir/ # 忽略指定路径下的 dir 目录及其内容</li></ul></li><li>忽略特定文件类型或扩展名： <ul><li>.txt # 忽略所有扩展名为 .txt 的文件</li><li>/logs/.log # 忽略 logs 目录下的所有 .log 文件</li></ul></li><li>不忽略名为 .gitkeep 的文件： <ul><li>.gitkeep # 不忽略空文件夹（通常在空文件夹中添加此文件来防止其被忽略）</li></ul></li></ol><p>注意，<code>.gitignore</code> 文件中的规则遵循以下约定：</p><ul><li><code>#</code> 表示注释，从该字符到行尾的内容将被忽略。</li><li>每行一个规则，可以是文件、目录或模式。</li><li>使用斜杠 <code>/</code> 表示路径分隔符，可以指定文件的相对路径。</li><li>使用 <code>*</code> 表示通配符，匹配零个或多个字符。</li><li>使用 <code>!</code> 前缀来否定匹配，表示不忽略特定的文件或目录。</li></ul>',5),c=[a];function r(d,n,g,s,_,p){return e(),t("div",null,c)}const f=i(o,[["render",r]]);export{u as __pageData,f as default};
